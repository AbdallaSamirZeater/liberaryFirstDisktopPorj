/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Taqseet;

import java.awt.event.KeyEvent;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ahmed
 */
public class recieved_items extends javax.swing.JPanel {

    /**
     * Creates new form recieved_items
     */
    public DefaultTableModel ReceivedItems;
    static int cID;

    public recieved_items(String name, String type, int i) {
        initComponents();
        cID = i;
        //this.type.setText(type);
        this.name.setText(type);
        //this.total.setText(String.valueOf(TRM(cID)));
        makeTable();
        mandobReceivedItemsTable();
        total();
        Home.styleTable(new JTable[]{recivedItemTable});
    }

    public void delTblCol(DefaultTableModel table) {
        if (table.getRowCount() != 0) {
            for (int i = table.getRowCount() - 1; i >= 0; i--) {
                table.removeRow(i);
            }
        }
    }

    DefaultTableModel createTableCols(JTable table, String[] cols) {
        DefaultTableModel dmodel;
        dmodel = (DefaultTableModel) table.getModel();
        for (int i = 0; i < cols.length; i++) {
            dmodel.addColumn(cols[i]);
        }
        return dmodel;
    }

    float recived(int s) {
        DBcon d = new DBcon();
        float old = 0;
        try {
            d.rs = d.st.executeQuery("select * from mandob where id = '" + s + "';");
            d.rs.last();
            old = d.rs.getFloat("total_recieved_money");
        } catch (Exception e) {

        }
        return old;
    }

    void total() {
        int id = 0, quant;
        float total = 0, price = 0;
        try {
            DBcon d = new DBcon();
            d.rs = d.st.executeQuery("select * from mandob_received_items,item WHERE mandob_received_items.item_id = item.id AND mandob_received_items.mandob_id = '" + cID + "';");
            while (d.rs.next()) {

                quant = d.rs.getInt("mandob_received_items.quantity");
                price = d.rs.getFloat("item.cash_price");

                total += quant * price;
            }
            this.total.setText(String.valueOf(total));
        } catch (Exception e) {
        }

    }

    float get_price(int id) {
        float price = 0;
        DBcon d = new DBcon();
        try {
            d.rs = d.st.executeQuery("select * from item where item.id = '" + id + "';");
            d.rs.last();
            price = d.rs.getFloat("buy_price");
        } catch (Exception e) {

        }

        return price;
    }

    float TRM(int id) {
        float total = 0;
        DBcon d = new DBcon();
        try {
            d.rs = d.st.executeQuery("select * from mandob where mandob.id = '" + id + "';");
            while (d.rs.next()) {
                total += d.rs.getFloat("total_recieved_money");
            }
        } catch (Exception e) {
        }

        return total;
    }

    public void makeTable() {
        ReceivedItems = createTableCols(recivedItemTable, new String[]{"التاريخ", "الكمية", "الصنف", "الكود"});
    }

    void mandobReceivedItemsTable() {
        delTblCol(ReceivedItems);
        DBcon d = new DBcon();
        String sql2 = "SELECT * FROM `mandob_received_items` , mandob , item WHERE mandob_received_items.mandob_id = mandob.id AND mandob_received_items.item_id = item.id AND mandob.id = '" + cID + "';";
        String name, id, quant, date;
        String totalRecived = null;

        try {

            d.rs = d.st.executeQuery(sql2);
            while ((d.rs).next()) {
                name = d.rs.getString("item.name");
                id = String.valueOf(d.rs.getInt("mandob_received_items.id"));
                quant = String.valueOf(d.rs.getInt("mandob_received_items.quantity"));
                date = String.valueOf(d.rs.getDate("mandob_received_items.date"));
                String[] rowData = {date, quant, name, id};
                ReceivedItems.addRow(rowData);
            }
        } catch (Exception e) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel66 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        reciveDate = new javax.swing.JTextField();
        reciveQuant = new javax.swing.JTextField();
        reciveItemId = new javax.swing.JTextField();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        reciveItem = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        recivedItemTable = new javax.swing.JTable();
        jLabel82 = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        recivedId = new javax.swing.JTextField();
        jLabel77 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(189, 195, 199));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel66.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/enter.png"))); // NOI18N
        add(jLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 220, 30, 60));

        jLabel76.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel76.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel76.setText("الكمية :");
        add(jLabel76, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 360, 130, 60));

        jLabel79.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel79.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel79.setText("الصنف : ");
        add(jLabel79, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 290, 130, 60));

        reciveDate.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        reciveDate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        reciveDate.setText(LocalDate.now()+"");
        reciveDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(131, 149, 167), 3));
        reciveDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reciveDateActionPerformed(evt);
            }
        });
        add(reciveDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 80, 330, 60));

        reciveQuant.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        reciveQuant.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        reciveQuant.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(131, 149, 167), 3));
        reciveQuant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reciveQuantActionPerformed(evt);
            }
        });
        add(reciveQuant, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 360, 330, 60));

        reciveItemId.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        reciveItemId.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        reciveItemId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(131, 149, 167), 3));
        reciveItemId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reciveItemIdActionPerformed(evt);
            }
        });
        add(reciveItemId, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 220, 330, 60));

        jLabel80.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel80.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel80.setText("الكمية :");
        add(jLabel80, new org.netbeans.lib.awtextra.AbsoluteConstraints(1560, 320, 80, 60));

        jLabel81.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel81.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel81.setText("التاريخ :");
        add(jLabel81, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 80, 130, 60));

        reciveItem.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        reciveItem.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        reciveItem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(131, 149, 167), 3));
        reciveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reciveItemActionPerformed(evt);
            }
        });
        add(reciveItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 290, 330, 60));

        jScrollPane4.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        recivedItemTable.setAutoCreateRowSorter(true);
        recivedItemTable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        recivedItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        recivedItemTable.setToolTipText("");
        recivedItemTable.setGridColor(new java.awt.Color(153, 153, 153));
        recivedItemTable.setRowHeight(45);
        recivedItemTable.setRowMargin(3);
        recivedItemTable.setShowHorizontalLines(true);
        recivedItemTable.setShowVerticalLines(true);
        recivedItemTable.setSurrendersFocusOnKeystroke(true);
        recivedItemTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recivedItemTableMouseClicked(evt);
            }
        });
        recivedItemTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                recivedItemTableKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(recivedItemTable);

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 680));

        jLabel82.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel82.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel82.setText("الاسم :");
        add(jLabel82, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 10, 130, 60));

        name.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        name.setForeground(new java.awt.Color(153, 0, 0));
        name.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        name.setText("حمادة حمادة");
        add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 10, 330, 60));

        total.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        total.setForeground(new java.awt.Color(153, 0, 0));
        total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        total.setText("10000");
        add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 490, 390, 60));

        jLabel85.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel85.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel85.setText("قيمة الأصناف المستلمة");
        add(jLabel85, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 440, 250, 60));

        jLabel86.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel86.setForeground(new java.awt.Color(153, 0, 0));
        jLabel86.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel86.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ok.png"))); // NOI18N
        jLabel86.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel86MouseClicked(evt);
            }
        });
        add(jLabel86, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 550, 160, 120));

        recivedId.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        recivedId.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        recivedId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(131, 149, 167), 3));
        recivedId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recivedIdActionPerformed(evt);
            }
        });
        add(recivedId, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 150, 330, 60));

        jLabel77.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel77.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel77.setText("الكود : ");
        add(jLabel77, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 150, 130, 60));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 560, -1, -1));

        jLabel78.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel78.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel78.setText("كود الصنف :");
        add(jLabel78, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 220, 130, 60));
    }// </editor-fold>//GEN-END:initComponents

    private void reciveDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reciveDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reciveDateActionPerformed

    private void reciveQuantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reciveQuantActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reciveQuantActionPerformed

    private void reciveItemIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reciveItemIdActionPerformed
        DBcon d = new DBcon();
        try {

            d.rs = d.st.executeQuery("select * from item WHERE id = '" + reciveItemId.getText() + "';");
            while (d.rs.next()) {

                reciveItem.setText(d.rs.getString("name"));;

            }

        } catch (Exception e) {

        }
//
//
    }//GEN-LAST:event_reciveItemIdActionPerformed

    private void reciveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reciveItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reciveItemActionPerformed

    private void recivedItemTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recivedItemTableMouseClicked
        String id = null, name = "unknown", quant = null, date = null;
        int n = recivedItemTable.getSelectedRow();
        name = recivedItemTable.getValueAt(n, 2).toString();
        id = recivedItemTable.getValueAt(n, 3).toString();
        quant = recivedItemTable.getValueAt(n, 1).toString();
        date = recivedItemTable.getValueAt(n, 0).toString();

        try {
            DBcon d = new DBcon();
            d.rs = d.st.executeQuery("select * from item WHERE name = '" + name + "';");
            while (d.rs.next()) {

                reciveItemId.setText(d.rs.getString("id"));;

            }

        } catch (Exception e) {
        }

        recivedId.setText(id);
        reciveItem.setText(name);
        reciveQuant.setText(quant);
        reciveDate.setText(date);

    }//GEN-LAST:event_recivedItemTableMouseClicked

    private void jLabel86MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel86MouseClicked
        // insert recivingItem
        DBcon d = new DBcon();
        try {
            int id = 0;
            float cash = 0;
            int oldQuant = 0;
            int counter = 0;
            d.rs = d.st.executeQuery("SELECT * FROM mandob_received_items WHERE item_id = '" + reciveItemId.getText() + "' AND mandob_id = '" + cID + "';");
            while (d.rs.next()) {
                counter++;
                id = d.rs.getInt("id");
                oldQuant = d.rs.getInt("quantity");
            }
            if (counter == 0) {
                d.st = d.con.createStatement();
                d.st.executeUpdate("INSERT INTO `mandob_received_items` (`id`, `item_id`, `mandob_id`, `quantity`, `date`) VALUES (NULL, '" + reciveItemId.getText() + "', '" + cID + "', '" + reciveQuant.getText() + "','" + LocalDate.now() + "');");
            } else {
                d.st = d.con.createStatement();
                d.st.executeUpdate("UPDATE `mandob_received_items` SET  `quantity` =  '" + (oldQuant + Integer.valueOf(reciveQuant.getText())) + "' WHERE id = '" + id + "';");

            }
//            d.st = d.con.createStatement();
//            d.st.executeUpdate("INSERT INTO `mandob_received_items` (`id`, `item_id`, `mandob_id`, `quantity`, `date`) VALUES (NULL, '" + reciveItemId.getText() + "', '" + cID + "', '" + reciveQuant.getText() + "','" + LocalDate.now() + "');");
            int oldq = 0, newq = 0;
            d.rs = d.st.executeQuery("SELECT * FROM item WHERE item.id = '" + reciveItemId.getText() + "';");
            d.rs.last();
            cash = d.rs.getFloat("cash_price");
            float totalRecived = Integer.valueOf(reciveQuant.getText()) * cash;
            float oldTotalReceved = recived(cID);
            oldq = d.rs.getInt("quantity");
            newq = oldq - Integer.valueOf(reciveQuant.getText());
            d.st = d.con.createStatement();
            d.st.executeUpdate("UPDATE item SET quantity = '" + newq + "' WHERE item.id = '" + reciveItemId.getText() + "';");
            total.setText((totalRecived + oldTotalReceved) + "");
            d.st = d.con.createStatement();
            String s = "تسليم مندوب كمية " + reciveQuant.getText() + "من الصنف " + reciveItem.getText();

            d.st.executeUpdate("INSERT INTO `history` (`id`, `person_id`, `person_type`, `date`, `operation`,type) VALUES (NULL, '" + cID + "', '" + this.name.getText() + "', '" + LocalDate.now() + "',  '" + s + "', 'mandob') ;");
            JOptionPane.showMessageDialog(this, "<html><h1 style='font-family: Calibri; font-size:20px;'>تم </h3></html>");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "<html><h1 style='font-family: Calibri; font-size:20px'>هناك خطأ ما -- حاول مرة اخري </h3></html>");
        }
        delTblCol(ReceivedItems);
        mandobReceivedItemsTable();
        total();

    }//GEN-LAST:event_jLabel86MouseClicked

    private void recivedIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recivedIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_recivedIdActionPerformed

    private void recivedItemTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_recivedItemTableKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            int n = recivedItemTable.getSelectedRow();
            ReceivedItems.removeRow(n);
        }
    }//GEN-LAST:event_recivedItemTableKeyPressed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        int stockQuant = 0, quant = 0;
        String item = null;
        DBcon d = new DBcon();
        DBcon db = new DBcon();
        try {
            //
            String ss;
            //................................................................................................
            d.rs = d.st.executeQuery("SELECT * FROM `mandob_received_items`,item WHERE mandob_received_items.item_id = item.id AND `mandob_id`='" + cID + "';");
            while (d.rs.next()) {
                quant = d.rs.getInt("mandob_received_items.quantity");
                stockQuant = d.rs.getInt("item.quantity");
                db.st = db.con.createStatement();
                db.st.executeUpdate("UPDATE `item` SET `quantity`= '" + (stockQuant + quant) + "' WHERE id = '" + d.rs.getInt("mandob_received_items.item_id") + "';");
                //db.con.close();
            }
            d.st = d.con.createStatement();
            d.st.executeUpdate("DELETE FROM `mandob_received_items` WHERE `mandob_id` = '" + cID + "';");

            String itemId = null, date = null;
            for (int i = 0; i < recivedItemTable.getRowCount(); i++) {
                item = String.valueOf(recivedItemTable.getModel().getValueAt(i, 2));
                date = String.valueOf(recivedItemTable.getModel().getValueAt(i, 0));
                quant = Integer.parseInt(String.valueOf(recivedItemTable.getModel().getValueAt(i, 1)));
                d.rs = d.st.executeQuery("select * from item WHERE name = '" + item + "';");
                while (d.rs.next()) {
                    itemId = String.valueOf(d.rs.getInt("id"));
                }
                String sql1 = "SELECT * FROM `item` WHERE item.id='" + itemId + "';";
                d.rs = d.st.executeQuery(sql1);
                (d.rs).last();
                stockQuant = d.rs.getInt("quantity");
                db.st = d.con.createStatement();
                db.st.executeUpdate("INSERT INTO `mandob_received_items` (`id`, `item_id`, `mandob_id`, `quantity` , `date`) VALUES (NULL, '" + itemId + "' , '" + cID + "', '" + quant + "' , '" + date + "');");
                ss = "UPDATE `item` SET `quantity` = '" + (stockQuant - quant) + "' WHERE item .`id` = '" + itemId + "';";
                db.st = d.con.createStatement();
                db.st.executeUpdate(ss);
            }
            JOptionPane.showMessageDialog(this, "<html><h1 style='font-family: Calibri; font-size:20px;'>تم </h3></html>");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "<html><h1 style='font-family: Calibri; font-size:20px'>هناك خطأ ما -- حاول مرة اخري </h3></html>");
        }
        delTblCol(ReceivedItems);
        mandobReceivedItemsTable();
        total();
    }//GEN-LAST:event_jLabel1MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel name;
    private javax.swing.JTextField reciveDate;
    private javax.swing.JTextField reciveItem;
    private javax.swing.JTextField reciveItemId;
    private javax.swing.JTextField reciveQuant;
    private javax.swing.JTextField recivedId;
    private javax.swing.JTable recivedItemTable;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables
}
