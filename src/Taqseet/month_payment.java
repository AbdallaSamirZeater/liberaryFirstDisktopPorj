/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Taqseet;

import java.time.LocalDate;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ahmed
 */
public class month_payment extends javax.swing.JPanel {

    /**
     * Creates new form CRI
     */
    public DefaultTableModel ReceivedItems, qest;
    static int cID;
    static String name;

    public month_payment() {
        initComponents();
        makeTable();
        Home.styleTable(new JTable[]{aqsat, clientRecivedItem});
        mandobReceivedItemsTable();

    }

    public month_payment(String name, int i) {
        initComponents();
        cID = i;
        this.name = name;
        makeTable();
        mandobReceivedItemsTable();
        Home.styleTable(new JTable[]{aqsat, clientRecivedItem});
    }

    public void delTblCol(DefaultTableModel table) {
        if (table.getRowCount() != 0) {
            for (int i = table.getRowCount() - 1; i >= 0; i--) {
                table.removeRow(i);
            }
        }
    }

    DefaultTableModel createTableCols(JTable table, String[] cols) {
        DefaultTableModel dmodel;
        dmodel = (DefaultTableModel) table.getModel();
        for (int i = 0; i < cols.length; i++) {
            dmodel.addColumn(cols[i]);
        }
        return dmodel;
    }

    public void makeTable() {
        ReceivedItems = createTableCols(clientRecivedItem, new String[]{"التكلفة الكلية", "عدد الاقساط", "المقدم", "الكمية", "الصنف", "الكود"});
        qest = createTableCols(aqsat, new String[]{"قيمة القسط", "الشهر", "رقم القسط", "الكود"});
    }

    void mandobReceivedItemsTable() {
        delTblCol(ReceivedItems);
        DBcon d = new DBcon();
        String sql2 = "SELECT * FROM `client_recieved_items` , client , item WHERE client_recieved_items.clientId = client.id AND client_recieved_items.item_id = item.id AND client.id = '" + cID + "' ;";
        String itemName, id, quant, total = null, qestNum = null, handOver = null;
        try {
            d.rs = d.st.executeQuery(sql2);
            while ((d.rs).next()) {
                id = String.valueOf(d.rs.getInt("client_recieved_items.id"));
                itemName = d.rs.getString("item.name");
                quant = String.valueOf(d.rs.getInt("client_recieved_items.quantity"));
                qestNum = String.valueOf(d.rs.getInt("client_recieved_items.month_count"));
                handOver = String.valueOf(d.rs.getFloat("client_recieved_items.handOver"));
                total = String.valueOf(d.rs.getFloat("client_recieved_items.total_payment"));

                String[] rowData = {total, qestNum, handOver, quant, itemName, id};
                ReceivedItems.addRow(rowData);
            }

        } catch (Exception e) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        aqsat = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        clientRecivedItem = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        total = new javax.swing.JLabel();
        ShouldBeTotal = new javax.swing.JLabel();

        setBackground(new java.awt.Color(189, 195, 199));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane4.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        aqsat.setAutoCreateRowSorter(true);
        aqsat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        aqsat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        aqsat.setToolTipText("");
        aqsat.setGridColor(new java.awt.Color(153, 153, 153));
        aqsat.setRowHeight(45);
        aqsat.setRowMargin(3);
        aqsat.setShowHorizontalLines(true);
        aqsat.setShowVerticalLines(true);
        aqsat.setSurrendersFocusOnKeystroke(true);
        aqsat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                aqsatMouseExited(evt);
            }
        });
        jScrollPane4.setViewportView(aqsat);

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 410, 460));

        jPanel2.setBackground(new java.awt.Color(189, 195, 199));
        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 10, 380));

        jScrollPane5.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        clientRecivedItem.setAutoCreateRowSorter(true);
        clientRecivedItem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        clientRecivedItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        clientRecivedItem.setToolTipText("");
        clientRecivedItem.setGridColor(new java.awt.Color(153, 153, 153));
        clientRecivedItem.setRowHeight(45);
        clientRecivedItem.setRowMargin(3);
        clientRecivedItem.setShowHorizontalLines(true);
        clientRecivedItem.setShowVerticalLines(true);
        clientRecivedItem.setSurrendersFocusOnKeystroke(true);
        clientRecivedItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clientRecivedItemMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(clientRecivedItem);

        add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 230, 860, 460));

        jButton1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jButton1.setText("تعديل");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(131, 149, 167), 3));
        jButton1.setEnabled(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 120, 120, 50));

        total.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        total.setText("00");
        add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 30, 200, 60));

        ShouldBeTotal.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        ShouldBeTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ShouldBeTotal.setText("00");
        ShouldBeTotal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ShouldBeTotalMouseClicked(evt);
            }
        });
        add(ShouldBeTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 200, 60));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int n = clientRecivedItem.getSelectedRow();
        int order = 0, manId = 0, manId2 = 0;
        float val = 0;
        String rd = null;
        String qestId = null;
        boolean tahsel;
        DBcon d = new DBcon();
        DBcon db = new DBcon();
        try {

            String id = String.valueOf(clientRecivedItem.getModel().getValueAt(n, 5));
            for (int i = 0; i < aqsat.getRowCount(); i++) {
                qestId = String.valueOf(aqsat.getModel().getValueAt(i, 3));
                d.st = d.con.createStatement();
                d.st.executeUpdate("DELETE FROM `tahsel` WHERE `qest_id` = '" + qestId + "';");
            }

            d.rs = d.st.executeQuery("SELECT * FROM `aqsat` WHERE `CRI`='" + id + "';");
            while (d.rs.next()) {
                manId2 = d.rs.getInt("aqsat.mandob_id");
                //rd = String.valueOf(d.rs.getDate("client_recieved_items.received_date"));
            }

            d.st = d.con.createStatement();
            d.st.executeUpdate("DELETE FROM `aqsat` WHERE `CRI` = '" + id + "';");
            //................................................................................................
            d.rs = d.st.executeQuery("SELECT * FROM `client_recieved_items` WHERE `id`='" + id + "';");
            while (d.rs.next()) {
                manId = d.rs.getInt("client_recieved_items.mandob_id");
                //rd = String.valueOf(d.rs.getDate("client_recieved_items.received_date"));
            }

            String itemId = null;
            int date;
            for (int i = 0; i < aqsat.getRowCount(); i++) {
                qestId = String.valueOf(aqsat.getModel().getValueAt(i, 3));
                date = LocalDate.parse(aqsat.getModel().getValueAt(i, 1).toString()).getMonthValue();
                rd = aqsat.getModel().getValueAt(i, 1).toString();
                val = Float.valueOf(String.valueOf(aqsat.getModel().getValueAt(i, 0)));
                order = Integer.parseInt(String.valueOf(aqsat.getModel().getValueAt(i, 2)));
                d.st = d.con.createStatement();
                d.st.executeUpdate("INSERT INTO `aqsat` (`id`, `mandob_id`, `client_id`, `month_payment`, `value`, `tahsel`, `received_date`, `order`, `done`, `CRI`) VALUES (NULL, '" + manId2 + "', '" + cID + "', '" + date + "', '" + val + "', '0', '" + rd + "', '" + order + "', '0', '" + id + "');");

            }

            d.st = d.con.createStatement();
            d.st.executeUpdate("INSERT INTO `history` (`id`, `person_id`, `person_type`, `date`, `operation`,type) VALUES (NULL, '" + cID + "', '" + this.name + "', '" + LocalDate.now() + "',  '" + val + "تعديل عدد اقساط  ' , 'client');");

        } catch (Exception e) {

        }
        delTblCol(ReceivedItems);
        mandobReceivedItemsTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void clientRecivedItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientRecivedItemMouseClicked
        int n = clientRecivedItem.getSelectedRow();
        DBcon d = new DBcon();
        String cri = clientRecivedItem.getValueAt(n, 5).toString();
        String overHand = clientRecivedItem.getValueAt(n, 2).toString();
        String tot = String.valueOf(Float.valueOf(clientRecivedItem.getValueAt(n, 0).toString()) - Float.valueOf(overHand));

        this.total.setText(tot);
        ShouldBeTotal.setText(tot);
        delTblCol(qest);

        String sql2 = "SELECT * FROM `client_recieved_items` , aqsat WHERE client_recieved_items.id = aqsat.CRI AND client_recieved_items.id = '" + cri + "' ;";
        String id, val = null, qestNum = null;
        String month;
        try {
            d.rs = d.st.executeQuery(sql2);
            while ((d.rs).next()) {
                id = String.valueOf(d.rs.getInt("aqsat.id"));
                month = String.valueOf(d.rs.getDate("aqsat.received_date"));
                val = String.valueOf(d.rs.getFloat("aqsat.value"));
                qestNum = String.valueOf(d.rs.getInt("aqsat.order"));
                String[] rowData = {val, month, qestNum, id};
                qest.addRow(rowData);
            }
        } catch (Exception e) {

        }    }//GEN-LAST:event_clientRecivedItemMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
//         int n = clientRecivedItem.getSelectedRow();
//          int order = 0 ,  manId = 0 ;
//          float val = 0 ;
//          String rd = null ;
//            String qestId = null;
//            boolean tahsel;
//            DBcon d= new DBcon();
//            DBcon db = new DBcon();
//        try {
//
//            String id = String.valueOf(clientRecivedItem.getModel().getValueAt(n , 5));
//            for (int i = 0 ; i < aqsat.getRowCount() ; i++){
//                qestId = String.valueOf(aqsat.getModel().getValueAt(i , 3));
//                  d.st = d.con.createStatement();
//          d.st.executeUpdate("DELETE FROM `tahsel` WHERE `qest_id` = '" + qestId + "';");
//            }
//            d.st = d.con.createStatement();
//          d.st.executeUpdate("DELETE FROM `aqsat` WHERE `CRI` = '" + id + "';");
//           //................................................................................................
//                   d.rs = d.st.executeQuery("SELECT * FROM `client_recieved_items` WHERE `id`='" + id + "';");
//             while(d.rs.next()){
//                manId = d.rs.getInt("client_recieved_items.mandob_id");
//                rd = String.valueOf(d.rs.getDate("client_recieved_items.received_date"));
//          }
//          String itemId = null ,  date = null ;
//          for (int i = 0 ; i < aqsat.getRowCount() ; i++){
//                qestId = String.valueOf(aqsat.getModel().getValueAt(i , 3));
//                date = String.valueOf(aqsat.getModel().getValueAt(i , 1));
//                val = Float.valueOf(String.valueOf(aqsat.getModel().getValueAt(i , 0)));
//                order = Integer.parseInt(String.valueOf(aqsat.getModel().getValueAt(i , 2)));
//                d.st = d.con.createStatement();
//                d.st.executeUpdate("INSERT INTO `aqsat` (`id`, `mandob_id`, `client_id`, `month_payment`, `value`, `tahsel`, `received_date`, `order`, `done`, `CRI`) VALUES (NULL, '"+manId+"', '"+cID+"', '"+date+"', '"+val+"', '0', '"+rd+"', '"+order+"', '0', '"+id+"');");
//
//            }
//                 JOptionPane.showMessageDialog(null, "Done   --  تم");
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e);
//        }
//         delTblCol(ReceivedItems);
//         mandobReceivedItemsTable();
//
    }//GEN-LAST:event_jButton1MouseClicked

    private void aqsatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aqsatMouseExited
        float val = 0;
        for (int i = 0; i < aqsat.getRowCount(); i++) {
            val += Float.valueOf(String.valueOf(aqsat.getModel().getValueAt(i, 0)));
        }
        ShouldBeTotal.setText(String.valueOf(val));
        if (ShouldBeTotal.getText().equals(total.getText())) {
            jButton1.setEnabled(true);
        } else {
            jButton1.setEnabled(false);
        }
    }//GEN-LAST:event_aqsatMouseExited

    private void ShouldBeTotalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ShouldBeTotalMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ShouldBeTotalMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ShouldBeTotal;
    private javax.swing.JTable aqsat;
    private javax.swing.JTable clientRecivedItem;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables
}
